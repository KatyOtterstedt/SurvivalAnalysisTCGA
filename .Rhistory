getwd()
knitr::purl("a- RAC1 survival analysis.Rmd")
## ----message=FALSE, warning = FALSE-------------------------------------------------------
library(tidyverse) # pipes (%>%) and dplyr data munging
library(RTCGA.clinical) # survival times
library(RTCGA.rnaseq) # genes expression
library(survminer)
library(survival)
## ----message=FALSE, warning = FALSE-------------------------------------------------------
COAD.surv <- survivalTCGA(COAD.clinical)
## ----message=FALSE, warning = FALSE-------------------------------------------------------
#Look for gene ID and extract expression
RAC1_expression <- expressionsTCGA(COAD.rnaseq,extract.cols = "RAC1|5879")
#Rename variables and cut sample names
RAC1_expression <- RAC1_expression %>% rename(cohort = dataset,
RAC1 = `RAC1|5879`)%>%
mutate(bcr_patient_barcode = substr(bcr_patient_barcode, 1, 12))
#Merge with survival data
COAD.surv.Rac1 <- COAD.surv %>%
left_join(RAC1_expression,
by = "bcr_patient_barcode")
COAD.surv.Rac1 <- COAD.surv.Rac1 %>%
filter(!is.na(RAC1))
## ----message=FALSE, warning = FALSE-------------------------------------------------------
COAD.cut <- surv_cutpoint(
COAD.surv.Rac1,
time = "times",
event = "patient.vital_status",
variables = "RAC1")
# Getting the value of cutpoint in CPM and statistic
summary(COAD.cut)
# Checking some statistics related to out gene of interest
mean(COAD.surv.Rac1$RAC1, na.rm = TRUE)
sd(COAD.surv.Rac1$RAC1, na.rm = TRUE)
median(COAD.surv.Rac1$RAC1, na.rm = TRUE)
# Plotting the cutpoint
plot(COAD.cut, "RAC1", palette = "npg")
## ----message=FALSE, warning = FALSE-------------------------------------------------------
COAD.cat <- surv_categorize(COAD.cut)
COAD.cat <- cbind(COAD.surv.Rac1$bcr_patient_barcode, COAD.cat)
colnames(COAD.cat)[1] <- "bcr_patient_barcode"
#Refactoring so that our control "low" goes first in the plot
COAD.cat <- COAD.cat %>%
mutate(across(all_of("RAC1"), ~ factor(., levels = c("low", "high"))))
#Adjusting with survfit
fit <- surv_fit(Surv(times, patient.vital_status) ~ RAC1, data = COAD.cat)
#Obtaining pvalue for each fit
surv_pvalue(fit)
install.packages('tinytex')
tinytex::install_tinytex()
